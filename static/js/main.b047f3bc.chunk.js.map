{"version":3,"sources":["panels/Home.js","panels/Persik.js","App.js","index.js","img/persik.png"],"names":["Home","id","go","fetchedUser","text","getRandom","title","before","photo_200","src","description","city","first_name","last_name","align","size","level","onClick","data-to","osName","platform","Persik","props","left","IOS","className","persik","alt","App","useState","activePanel","setActivePanel","random","setRandom","setUser","popout","setPopout","useEffect","a","connect","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","Math","floor","length","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById","module","exports"],"mappings":"uZA+CeA,EArCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,EAAwBC,KAAxB,EAA8BC,UAA9B,OACZ,kBAAC,IAAD,CAAOJ,GAAIA,GACV,kBAAC,IAAD,+FACCE,GACD,kBAAC,IAAD,CAAOG,MAAM,qCACZ,kBAAC,IAAD,CACCC,OAAQJ,EAAYK,UAAY,kBAAC,IAAD,CAAQC,IAAKN,EAAYK,YAAe,KACxEE,YAAaP,EAAYQ,MAAQR,EAAYQ,KAAKL,MAAQH,EAAYQ,KAAKL,MAAQ,IAFpF,UAIKH,EAAYS,WAJjB,YAI+BT,EAAYU,aAI5C,kBAAC,IAAD,CAAOP,MAAM,0FACf,kBAAC,IAAD,CAAKQ,MAAQ,UAAb,4RACG,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQC,KAAK,KAAKC,MAAM,IAAIC,QAASf,EAAIgB,UAAQ,UAAjD,2H,4ECdEC,G,OAASC,eAyBAC,EAvBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOrB,GAAIqB,EAAMrB,IAChB,kBAAC,IAAD,CACCsB,KAAM,kBAAC,IAAD,CAAcN,QAASK,EAAMpB,GAAIgB,UAAQ,QAC7CC,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,0FAOA,yBAAKC,UAAU,SAAShB,IAAKiB,IAAQC,IAAI,2FACzC,kBAAC,IAAD,CAAQZ,KAAK,KAAKC,MAAM,IAAIC,QAASK,EAAMjB,aAA3C,+EACkBiB,EAAMlB,QCiCXwB,EAjDH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEOF,mBAAS,CAChC,sLACA,+HACA,4EACA,mIACA,4GACA,mKACA,oGACA,mFACA,4DAXgB,mBAEVzB,EAFU,aAYWyB,mBAAS,IAZpB,mBAYVG,EAZU,KAYFC,EAZE,OAacJ,mBAAS,MAbvB,mBAaV1B,EAbU,KAaG+B,EAbH,OAcWL,mBAAS,MAdpB,mBAcVM,EAdU,KAcFC,EAdE,KAgBjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAQC,YAAY,uBADxC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAQG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACpC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IACH,IAAMjD,EAAY,WACnB4B,EAAUsB,KAAKC,MAAMD,KAAKvB,SAAW5B,EAAKqD,UAGnCvD,EAAK,SAAAwD,GACV3B,EAAe2B,EAAEC,cAAcC,QAAQC,KAIxC,OACC,kBAAC,IAAD,CAAM/B,YAAaA,EAAaK,OAAQA,GACvC,kBAAC,EAAD,CAAMlC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,EAAIG,UAAWA,EAAWD,KAAMA,EAAK4B,KACnF,kBAAC,EAAD,CAAQ/B,GAAG,SAASC,GAAIA,EAAIG,UAAWA,EAAWD,KAAMA,EAAK4B,OC3ChEO,IAAQuB,KAAK,gBAQbC,IAASC,OAAO,kBAAC,EAAD,MAASjB,SAASkB,eAAe,U,mBCjBjDC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.b047f3bc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nconst Home = ({ id, go, fetchedUser, text, getRandom}) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Совет на сегодня</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Совет на сегодня\">\n<Div align = \"center\">Пс, у меня есть для тебя совет на сегодня, хочешь узнать? :)</Div>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tКонечно, я хочу узнать :)\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tСовет на сегодня\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Совет на сегодня\"/>\n\t\t<Button size=\"xl\" level=\"2\" onClick={props.getRandom()}>\n\t\t\tМой тебе совет: {props.text}\n\t\t</Button>\n\t</Panel>\n\t);\n\n\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n/*import ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';*/\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [text, setText] = useState([\n\t\t'Не кипятись, жизнь не предсказуема',\n\t\t'Тебе надо поесть от души',\n\t\t'Улыбайся чаще',\n\t\t'Ложись сегодня пораньше',\n\t\t'Поиграй с кем-нибудь',\n\t\t'Обними человека, который рядом',\n\t\t'Позвони родителям',\n\t\t'Думай о хорошем',\n\t\t'Нет совета']);\n\tconst [random, setRandom] = useState(0)\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null); /*(<ScreenSpinner size='large' />);*/\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\tconst getRandom = () => {\nsetRandom(Math.floor(Math.random() * text.length));\n\n}\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} getRandom={getRandom} text={text[random]}/>\n\t\t\t<Persik id='persik' go={go} getRandom={getRandom} text={text[random]}/>\n\t\t\t\t\t\t\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","/*import 'core-js/features/map';\nimport 'core-js/features/set';*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}